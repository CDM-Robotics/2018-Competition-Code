plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "2018.02.17"
}

def TEAM = 6072
def ROBOT_CLASS = "org.cdm.team6072.Robot"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", jaci.openrio.gradle.frc.RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact('frcJava', jaci.openrio.gradle.frc.FRCJavaArtifact) {
            targets << "roborio"
        }
    }
}

repositories {
    mavenCentral()
}

// specify specific library versions

wpi {
    ctreVersion = '5.2.1.1'
//    wpilibVersion = '...'
//    ntcoreVersion = '...'
//    opencvVersion = '...'
//    cscoreVersion = '...'
//    wpiutilVersion = '...'
//
//    ctreVersion = '...'
//    ctreLegacyVersion = '...'   // NOTE: Legacy Toolsuite
    navxVersion = '3.0.346'
//
//    smartDashboardVersion = '...'
//    shuffleboardVersion = '...'
//
//    toolchainVersion = '...'
}

// Defining my dependencies. In this case, WPILib (+ friends), CTRE Toolsuite (Talon SRX)
// and NavX.
dependencies {
    compile wpilib()
    compile ctre()
    compile navx()
    compile openrio.powerup.matchData()
    compile 'org.codehaus.groovy:groovy-all:2.4.10'
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest jaci.openrio.gradle.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}